.grid.ff_fb, .grid.safari_fb, .grid.chrome_fb, .grid.ie_fb{
    display:block;
    overflow: hidden;
  
  @for $i from 1 through $columns {
    &.col-#{$i}{
      // width: ($i / $columns) * 100%;      
      > div, .item{
          width:(((1 / $i) * 100) * 1%) - 1.5%;
          margin:0 .75%;
          float:left;           
          margin-bottom:18px;
      }
      
    }
    &.col-2{
      // width: ($i / $columns) * 100%;      
      > div, .item{
          width:49%;
          margin:0 .5%;
          float:left;           
          margin-bottom:18px;
          clear:none;
          &:last-of-type{
            clear:none;
          }
      }
      
    }
    &.left-#{$i}{
      // width: ($i / $columns) * 100%;      
      // grid-template-columns: ((($i / 12) * 100) * 1%) (((1 - ($i / 12)) * 100) * 1%);      
      > .item:first-of-type{
         width:((($i / 12) * 100) * 1%);
         float:left;
         margin-right:0;
         margin-bottom:18px;
         margin-left:0;
      }
      > .item:last-of-type{
        width: ((((1 - ($i / 12)) * 100) * 1%) - 1.5%);
        margin-left:1.5%;
        float:left;
        margin-right:0;
        margin-bottom:18px;
      }
    }  
  }
  
  @include breakpoint(mobile) {
      @for $i from 1 through $columns {
        &.col-#{$i}-mobile{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:(((1 / $i) * 100) * 1%) - 1.5%;
              margin:0 .75%;
              float:left;             
              margin-bottom:18px;
          }
          
        }
        &.col-2-mobile{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:49%;
              margin:0 .5%;
              float:left;           
              margin-bottom:18px;
              clear:none;
              &:last-of-type{
                clear:none;
              }
          }          
        }

        &.left-#{$i}-mobile{
          // width: ($i / $columns) * 100%;      
          // grid-template-columns: ((($i / 12) * 100) * 1%) (((1 - ($i / 12)) * 100) * 1%);
          > .item:first-of-type{
             width:((($i / 12) * 100) * 1%);
             float:left;
             margin-left:0;
             margin-right:0;
             margin-bottom:18px;
          }
          > .item:last-of-type{
            width: ((((1 - ($i / 12)) * 100) * 1%) - 1%);
            margin-left:1%;
            margin-bottom:18px;
            float:right;
            margin-right:0;
            margin-right:0;
          }
        }
        &.left-0-mobile{
          // width: ($i / $columns) * 100%;      
          display:block;
          .item{
            display:block;
            width:100%;
          }
        }
      }
  }

  @include breakpoint(xs) {
      @for $i from 1 through $columns {
        &.col-#{$i}-xs{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:(((1 / $i) * 100) * 1%) - 1.5%;
              margin:0 .75%;
              float:left;
              margin-bottom:18px;
          }
        }

        &.col-2-xs{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:49%;
              margin:0 .5%;
              float:left;           
              margin-bottom:18px;
              clear:none;
              &:last-of-type{
                clear:none;
              }
          }          
        }

        &.left-#{$i}-xs{
          // width: ($i / $columns) * 100%;      
          //grid-template-columns: ((($i / 12) * 100) * 1%) (((1 - ($i / 12)) * 100) * 1%);
          > .item:first-of-type{
             width:((($i / 12) * 100) * 1%);
             float:left;
             margin-right:0;
             margin-left:0;
             margin-bottom:18px;
          }
          > .item:last-of-type{
            width: ((((1 - ($i / 12)) * 100) * 1%) - 1%);
            margin-left:1%;
            float:right;
            margin-right:0;
            margin-bottom:18px;
          }
        }
        &.left-0-xs{
          // width: ($i / $columns) * 100%;      
          // display:block;          
          // .item{
          //   display:block;
          //   width:100%;
          // }
        }
      }
  }
  
  @include breakpoint(s) {
      @for $i from 1 through $columns {
        &.col-#{$i}-s{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:(((1 / $i) * 100) * 1%) - 1.5%;
              margin:0 .75%;
              float:left;
              margin-bottom:18px;
          }
          
        }

        &.col-2-s{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:49%;
              margin:0 .5%;
              float:left;           
              margin-bottom:18px;
              clear:none;
              &:last-of-type{
                clear:none;
              }
          }          
        }

        &.left-#{$i}-s{
          // width: ($i / $columns) * 100%;      
          //grid-template-columns: ((($i / 12) * 100) * 1%) (((1 - ($i / 12)) * 100) * 1%);
          > .item:first-of-type{
             width:((($i / 12) * 100) * 1%);
             float:left;
             margin-right:0;
             margin-left:0;
             margin-bottom:18px;
          }
          > .item:last-of-type{
            width: ((((1 - ($i / 12)) * 100) * 1%) - 1%);
            margin-left:1%;
            float:right;
            margin-right:0;
            margin-bottom:18px;
          }
        }
        &.left-0-s{
          // width: ($i / $columns) * 100%;      
          display:block;
          .item{
            display:block;
            width:100%;
          }
        }
      }
  }

  @include breakpoint(m) {
      @for $i from 1 through $columns {
        &.col-#{$i}-m{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:(((1 / $i) * 100) * 1%) - 1.5%;
              margin:0 .75%;
              float:left;
              margin-bottom:18px;              
          }          
        }

        &.col-2-m{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:49%;
              margin:0 .5%;
              float:left;           
              margin-bottom:18px;
              clear:none;
              &:last-of-type{
                clear:none;
              }
          }          
        }

        &.left-#{$i}-m{
          // width: ($i / $columns) * 100%;      
          //grid-template-columns: ((($i / 12) * 100) * 1%) (((1 - ($i / 12)) * 100) * 1%);
          > .item:first-of-type{
             width:((($i / 12) * 100) * 1%);
             float:left;
             margin-right:0;
             margin-left:0;
             margin-bottom:18px;
          }
          > .item:last-of-type{
            width: ((((1 - ($i / 12)) * 100) * 1%) - 1%);
            margin-left:1%;
            float:right;
            margin-right:0;
            margin-bottom:18px;
          }
        }
        &.left-0-m{
          // width: ($i / $columns) * 100%;      
          display:block;
          .item{
            display:block;
            width:100%;
          }
        }
      }   
  }
  // Large Device Container
  @include breakpoint(l) {
      @for $i from 1 through $columns {
        &.col-#{$i}-l{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:(((1 / $i) * 100) * 1%) - 1.5%;
              margin:0 .75%;
              float:left;              
              margin-bottom:18px;
          }          
        }

        &.col-2-l{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:49%;
              margin:0 .5%;
              float:left;           
              margin-bottom:18px;
              clear:none;
              &:last-of-type{
                clear:none;
              }
          }          
        }

        &.left-#{$i}-l{
          // width: ($i / $columns) * 100%;      
          // grid-template-columns: ((($i / 12) * 100) * 1%) (((1 - ($i / 12)) * 100) * 1%);
          > .item:first-of-type{
             width:((($i / 12) * 100) * 1%);
             float:left;
             margin-right:0;
             margin-left:0;
             margin-bottom:18px;
          }
          > .item:last-of-type{
            width: ((((1 - ($i / 12)) * 100) * 1%) - 1%);
            margin-left:1%;
            float:right;
            margin-right:0;
            margin-bottom:18px;
          }
        }
        &.left-0-l{
          // width: ($i / $columns) * 100%;      
          display:block;
          .item{
            display:block;
            width:100%;
          }
        }
      }
  }
  // Extra Large Device Container
  @include breakpoint(xl) {
      @for $i from 1 through $columns {
        &.col-#{$i}-xl{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:(((1 / $i) * 100) * 1%) - 1.5%;
              margin:0 .75%;
              float:left;
              margin-bottom:18px;
          }          
        }

        &.col-2-xl{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:49%;
              margin:0 .5%;
              float:left;           
              margin-bottom:18px;
              clear:none;
              &:last-of-type{
                clear:none;
              }
          }          
        }

        &.left-#{$i}-xl{
          // width: ($i / $columns) * 100%;      
          //grid-template-columns: ((($i / 12) * 100) * 1%) (((1 - ($i / 12)) * 100) * 1%);
          > .item:first-of-type{
             width:((($i / 12) * 100) * 1%);
             float:left;
             margin-bottom:18px;
             margin-left:0;
             margin-right:0;
          }
          > .item:last-of-type{
            width: ((((1 - ($i / 12)) * 100) * 1%) - 1%);
            margin-left:1%;
            float:right;
            margin-bottom:18px;
            margin-right:0;
          }
        }
        &.left-0-xxl{
          // width: ($i / $columns) * 100%;      
          display:block;
          .item{
            display:block;
            width:100%;
          }
        }
      }
  }
  // Extra Large Device Container
  @include breakpoint(xxl) {
      @for $i from 1 through $columns {
        &.col-#{$i}-xxl{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:(((1 / $i) * 100) * 1%) - 1.5%;
              margin:0 .75%;
              float:left;
              margin-bottom:18px;              
          }          
        }

        &.col-2-xxl{
          // width: ($i / $columns) * 100%;      
          > div, .item{
              width:49%;
              margin:0 .5%;
              float:left;           
              margin-bottom:18px;
              clear:none;
              &:last-of-type{
                clear:none;
              }
          }          
        }

        &.left-#{$i}-xxl{
          // width: ($i / $columns) * 100%;      
          //grid-template-columns: ((($i / 12) * 100) * 1%) (((1 - ($i / 12)) * 100) * 1%);
          > .item:first-of-type{
             width:((($i / 12) * 100) * 1%);
             float:left;
             margin-bottom:18px;
             margin-left:0;
             margin-right:0;
          }
          > .item:last-of-type{
            width: ((((1 - ($i / 12)) * 100) * 1%) - 1%);
            margin-left:1%;
            margin-bottom:18px;
            float:right;
            margin-right:0;
          }
        }
        &.left-0-xxl{
          // width: ($i / $columns) * 100%;      
          display:block;
          .item{
            display:block;
            width:100%;
          }
        }
      }
  }
}